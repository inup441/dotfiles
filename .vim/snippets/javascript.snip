snippet :f
	${1:method_name}: function(${2:attribute}){
		${0}
	}

snippet func
alias   function
	function ${1:function_name}(${2:argument}) {
		${0:// body...}
	}

snippet proto
	${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) {
		${0:// body...}
	};


snippet f
    function(${1}) {${0:$TM_SELECTED_TEXT}};

snippet if
    if (${1:true}) {${0:$TM_SELECTED_TEXT}};


snippet ife
    if (${1:true}) {${0:$TM_SELECTED_TEXT}} else{};

snippet for
	for (var ${2:i}=0; $2 < ${1:Things}.length; $2++) {
		${0}
	};

snippet forin
  for (var ${2:name} in ${1:object}) {
    if (object.hasOwnProperty(name)) {
      ${0}
    }
  };

snippet ;,
    ${1:value_name}:${0:value},


snippet key
    ${1:key}: "${2:value}"}${3:, }


snippet timeout
    setTimeout(function() {${0}}${2:}, ${1:10});

snippet ajax
    $.ajax({
      url: '${1}',
      type: '${2}',
      data: ${3},
      dataType: '${4}',
      success: function() {
        ${0}
      },
      error: function() {
      }
    });

snippet     fu
abbr        anonymous
  function ${0}() {
    ${1}
  }

snippet     jq
abbr        $(function(){});
  $(function(){
    ${0}
  });

snippet     fn
abbr        anonymous
  (function(){
    ${0}
  }());

snippet     log
abbr        console.log(arg)
  console.log(${1:#arg});

snippet     llog
abbr        console.log(label + arg)
  console.log('${1:#label}: ' + {2:#arg});

snippet     default
  var ${1} = ${1} === undefined ? ${2} : ${3};

snippet     on
  on('${1}', '${2}', function(){
    ${0}
  });
